// Code generated by Boiler; DO NOT EDIT.

package storage

import (
  {{- range .InterfacePackages}}
  {{.ImportAlias}} "{{.ImportLine}}"
  {{- end}}
)

var (
  ErrRocketLockConflict = errors.New("rocket lock conflict")
  ErrRocketLockNotFound = errors.New("rocked lock not found")
)

type RocketLocksStorage interface {
  CreateLock(ctx context.Context, input CreateRocketLockInput) (*models.RocketLock, error)
  DeleteLock(ctx context.Context, input DeleteRocketLockInput) (*models.RocketLock, error)
  WithLock(ctx context.Context, input WithRocketLockInput, fn func(ctx context.Context) error) error
}

type CreateRocketLockInput struct {
  LockID  string
  LockTTL time.Duration
}

type DeleteRocketLockInput struct {
  LockID string
}

type WithRocketLockInput struct {
  LockID  string
  LockTTL time.Duration
}
