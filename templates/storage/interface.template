// Code generated by Boiler; DO NOT EDIT.

package storage

import (
  {{- range .InterfacePackages}}
  {{.ImportAlias}} "{{.ImportLine}}"
  {{- end}}
)

type {{.ModelName}}Storage interface {
  List{{.ModelName}}(ctx context.Context, input List{{.ModelName}}Input) ([]*models.{{.ModelName}}, error)
  {{.ModelName}}(ctx context.Context, input {{.ModelName}}Input) (*models.{{.ModelName}}, error)
  Put{{.ModelName}}(ctx context.Context, input Put{{.ModelName}}Input) (*models.{{.ModelName}}, error)
  Update{{.ModelName}}(ctx context.Context, input Update{{.ModelName}}Input) (*models.{{.ModelName}}, error)
  Delete{{.ModelName}}(ctx context.Context, input Delete{{.ModelName}}Input) (*models.{{.ModelName}}, error)
}

type {{.ModelName}}Input struct {
  Filters *{{.ModelName}}Filter
}

type {{.ModelName}}Filter struct {
  {{- range .ModelFields}}
  {{- range .ModelFieldFilters}}
  {{.FilterName}} {{.FilterType}}
  {{- end}}
  {{- end}}
}

type Put{{.ModelName}}Input struct {
  {{- range .ModelFields}}
  {{.FieldName}} {{.FieldType}} {{- if eq .FieldBadge "pk"}} // PRIMARY KEY{{- end}}
  {{- end}}
}

type Delete{{.ModelName}}Input struct {
  {{- range .ModelFields}}
  {{- if eq .FieldBadge "pk"}}
  {{.FieldName}} {{.FieldType}} // PRIMARY KEY
  {{- end}}
  {{- end}}
}

type Update{{.ModelName}}Input struct {
  {{- range .ModelFields}}
  {{.FieldName}} {{.FieldType}} {{- if eq .FieldBadge "pk"}} // PRIMARY KEY{{- end}}
  {{- end}}
}

type List{{.ModelName}}Input struct {
  Filters    *List{{.ModelName}}Filters
  Sort       *List{{.ModelName}}Sort
  Pagination *Pagination
}

type List{{.ModelName}}Sort struct {
  Field {{toLowerCamelCase .ModelName}}_Field
  Order sortOrder
}

func (p *List{{.ModelName}}Sort) {{toLowerCamelCase .ModelName}}Sort() string {
  return fmt.Sprintf("%s %s", p.Field, p.Order)
}

type List{{.ModelName}}Filters struct {
  {{- range .ModelFields}}
  {{- range .ModelsFieldFilters}}
  {{.FilterName}} {{.FilterType}}
  {{- end}}
  {{- end}}
}
